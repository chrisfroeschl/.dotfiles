#!/bin/sh
# File: mkgroff
# Maintainer: Chris Fröschl <cfroeschl@protonmail.com>
# Last Modified: Thu 04 Mar 2021 04:33:49 PM CET
# License:
# Copyright (c) 2020 Chris Fröschl.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# Description:
# Create an opinionated Groff project structure. 

# Global variables.
VERSION="1.0.1"
read -r -d '' HELP_TEXT << EOF
Usage: $(basename $0) [OPTIONS] directory ...

Options:
 -v, --version              Show the programs version number and exit.
 -h, --help                 Show this help message and exit.
 -m, --macros <file>        Change the macro symlink location. 
                            (Default: ~/.config/roff/macros.tmac)
EOF
read -r -d '' INDEX_MS << EOF
.so macros.tmac

.so content/title.ms

.so content/introduction.ms
EOF
read -r -d '' MAKEFILE << EOF
export GROFF_FONT_PATH=\${PWD}/fonts

index.pdf: index.ms content/title.ms content/introduction.ms
	groff -ms -Tpdf index.ms > dist/index.pdf

clean:
	rm -rf dist/*.pdf

.PHONY: clean
EOF

# Default values of arguments.
MACRO_PATH=~/.config/roff/macros.tmac

# Loop through arguments and process them.
for arg in "$@"
do
    case $arg in
        -h|--help)
        echo "$HELP_TEXT"
        exit # End script.
        ;;
        -v|--version)
        echo $VERSION
        exit # End script.
        ;;
        -m|--macros)
        MACRO_PATH="$2"
        shift # Remove argument name from processing.
        shift # Remove argument value from processing.
        ;;
        -*|--*)
        echo "$HELP_TEXT"
        exit # End script.
        ;;
    esac
done

# Loop through directory arguments.
for arg in "$@"
do
    # Creater directory structure.
    mkdir $arg && 
    cd $arg && 
    git init && 
    echo "**/*.pdf" > .gitignore && 
    mkdir assets content fonts dist &&
    # Create basic .ms and dependency files/linkes.
    echo "${INDEX_MS}" > index.ms && 
    echo "${MAKEFILE}" > Makefile &&
    echo "# ${arg}" > README.md && 
    printf ".TL\n${arg}" > content/title.ms &&  
    printf ".NH 1\nINTRODUCTION" > content/introduction.ms &&
    ln $MACRO_PATH macros.tmac && 
    # End logic.
    echo "Your new Project ${arg} was created!" &&
    cd ..
done
