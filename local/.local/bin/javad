#!/bin/sh
# File: javad
# Maintainer: Chris Fröschl <cfroeschl@protonmail.com>
# Last Modified: Thu 11 Mar 2021 05:09:26 PM CET
# License:
# Copyright (c) 2020 Chris Fröschl.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# Description:
# Java demon based on nodemon.

# Global variables.
VERSION="1.0.1"
SRC="src"
BIN="bin"
COMPILER="javac"
RUNNER="java"
JAVAC_FLAGS="-cp $SRC -d $BIN"
JAVA_FLAGS="-cp $BIN"

read -r -d '' HELP_TEXT << EOF
Usage: $(basename $0) [OPTIONS] file ...

Options:
 -v, --version              Show the programs version number and exit.
 -h, --help                 Show this help message and exit.
 -t, --test <file>          Run tests.
EOF

# Prepare a more refined package path for the following execution of the compiled
# code.
PKG_PATH=$(echo $1 | sed "s/\//\./g" | sed -E -e "s/(\.java|src\.)//g")

# Since Java would throw an error if not given, we have to test if there already
# exists a 'bin' directory.
if [ $(ls | grep -cw $BIN) -eq 0 ]
then
    echo "Creating your binary directory..." && 
    mkdir $BIN
fi

# Loop through arguments and process them.
for arg in "$@"
do
    case $arg in
        -h|--help)
        echo "$HELP_TEXT"
        exit 
        ;;
        -v|--version)
        echo $VERSION
        exit
        ;;
        -t|--test)
        # Set necessary testing flags by overriding the normal running flags.
        JAVAC_FLAGS="-cp $(ls $JUNIT_HOME/junit*) -d $BIN"
        JAVA_FLAGS="-cp $CLASSPATH:$BIN org.junit.runner.JUnitCore"
        # TODO Only temporary since the whole test world doesnt work atm.
        PKG_PATH="TestBasic"
        shift
        ;;
        -*|--*)
        echo "$HELP_TEXT"
        exit
        ;;
    esac
done

# Start the Java demon.
npx nodemon \
    -e java -w src -x \
    "$COMPILER $JAVAC_FLAGS $1; $RUNNER $JAVA_FLAGS $PKG_PATH"
